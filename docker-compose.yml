
services:
  app:
    build: .
    expose:
      - "8000"
    environment:
      - DATABASE_URL=postgresql://postgres:password@db:5432/webapp_stats
      - SECRET_KEY=your-secret-key-here_1337
    volumes:
      - ./app:/app
    depends_on:
      db:
        condition: service_healthy
    networks:
      - webapp-network

  db:
    image: postgres:alpine
    ports:
      - "127.0.0.1:5432:5432"
    environment:
      - POSTGRES_DB=webapp_stats
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      #- postgres_data:/var/lib/postgresql/data
      - ./postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      #test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      test: ["CMD-SHELL", "pg_isready -U postgres -d webapp_stats"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - webapp-network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./app/static:/var/www/static
    depends_on:
      - app
    networks:
      - webapp-network

#volumes:
#  postgres_data:

networks:
  webapp-network:
    driver: bridge
